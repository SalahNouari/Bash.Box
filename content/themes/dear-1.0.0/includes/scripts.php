<?php
/**
 * Loaders for front-end scripts and styles.
 *
 * @package    Dear\Functions\Scripts
 * @subpackage Genesis
 * @author     Robert Neu
 * @copyright  Copyright (c) 2015, Shay Bocks
 * @license    GPL-2.0+
 * @link       http://www.shaybocks.com/dear/
 * @since      1.0.0
 */

defined( 'ABSPATH' ) || exit;

add_action( 'wp_enqueue_scripts', 'dear_enqueue_js' );
add_action( 'wp_enqueue_scripts', 'dear_load_google_fonts' );
add_action( 'wp_enqueue_scripts', 'dear_inline_styles' );
add_action( 'dear_inline_styles', 'dear_google_fonts_styles' );
add_action( 'dear_inline_styles', 'dear_color_styles' );

/**
 * Return a URI for the theme's JS directory with an optional path.
 *
 * @since  1.0.0
 * @access public
 * @param  string $path a path to append to the JS directory uri.
 * @return string $path an absolute path to the JS uri.
 */
function dear_get_js_uri( $path ) {
	return trailingslashit( get_stylesheet_directory_uri() ) . 'js/' . ltrim( $path );
}

/**
 * Return a URI for the theme's CSS directory with an optional path.
 *
 * @since  1.0.0
 * @access public
 * @param  string $path a path to append to the CSS directory uri.
 * @return string $path an absolute path to the CSS uri.
 */
function dear_get_css_uri( $path ) {
	return trailingslashit( get_stylesheet_directory_uri() ) . 'css/' . ltrim( $path );
}

/**
 * Load all required JavaScript for the Foodie theme.
 *
 * @since  1.0.0
 * @access public
 * @return void
 */
function dear_enqueue_js() {
	wp_enqueue_script(
		'dear-general',
	 	dear_get_js_uri( 'general.js' ),
		array( 'jquery' ),
		CHILD_THEME_VERSION,
		true
	);
}

/**
 * Load Google Fonts libraries using dynamically generated user data.
 *
 * @since  1.0.0
 * @access public
 * @uses   customizer_library_get_google_font_uri()
 * @uses   CHILD_THEME_VERSION
 * @return bool true if font styles have been loaded.
 */
function dear_load_google_fonts() {
	if ( apply_filters( 'dear_disable_google_fonts', false ) ) {
		return false;
	}

	$fonts = array();
	foreach ( dear_get_fonts() as $font => $setting ) {
		$fonts[] = get_theme_mod( "{$font}_family", $setting['default_family'] );
	}

	wp_enqueue_style(
		'dear-google-fonts',
		customizer_library_get_google_font_uri( $fonts ),
		array(),
		CHILD_THEME_VERSION
	);

	return true;
}

/**
 * Load all CSS rules generated by the customizer.
 *
 * @since  1.0.0
 * @access public
 * @uses   Customizer_Library_Styles()
 * @return void
 */
function dear_inline_styles() {
	do_action( 'dear_inline_styles' );
	wp_add_inline_style( 'dear-theme', Customizer_Library_Styles()->build() );
}

/**
 * Build Google Fonts styles based on user input from the customizer.
 *
 * @since  1.0.0
 * @access public
 * @uses   dear_get_fonts()
 * @return bool
 */
function dear_google_fonts_styles() {
	if ( apply_filters( 'dear_disable_google_fonts', false ) ) {
		return false;
	}

	foreach ( dear_get_fonts() as $font => $data ) {
		if ( 'disabled' !== $data['default_family'] ) {
			dear_add_font(
				'family',
				get_theme_mod( "{$font}_family", $data['default_family'] ),
				$data
			);
		}

		if ( 'disabled' !== $data['default_weight'] ) {
			dear_add_font(
				'weight',
				get_theme_mod( "{$font}_weight", $data['default_weight'] ),
				$data
			);
		}

		if ( 'disabled' !== $data['default_size'] ) {
			dear_add_font(
				'size',
				get_theme_mod( "{$font}_size", $data['default_size'] ),
				$data
			);
		}

		if ( 'disabled' !== $data['default_style'] ) {
			dear_add_font(
				'style',
				get_theme_mod( "{$font}_style", $data['default_style'] ),
				$data
			);
		}
	}

	return true;
}

/**
 * Build color styles based on user input from the customizer.
 *
 * @since  1.0.0
 * @access public
 * @uses   dear_get_colors()
 * @return bool
 */
function dear_color_styles() {
	if ( apply_filters( 'dear_disable_colors', false ) ) {
		return false;
	}

	foreach ( dear_get_colors() as $color => $data ) {
		dear_add_color( get_theme_mod( $color, $data['default'] ), $data );
	}

	return true;
}
